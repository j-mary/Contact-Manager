{"version":3,"sources":["context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","TextInputGroup","label","name","placeholder","onChange","error","className","htmlFor","classnames","is-invalid","defaultProps","AddContact","email","phone","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","t0","uuid","history","push","_this2","_this$state2","bind","layout_TextInputGroup","Contact","showContactInfo","onDeleteClick","delete","_this$props$contact","style","styles","pointer","onClick","Link","to","cursor","float","color","marginRight","Contacts","Fragment","contacts_Contact","Header","brand","About","NotFound","EditContact","match","params","put","App","context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9130da7f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nfunction TextInputGroup(props) {\r\n  const { label, name, value, placeholder, type, onChange, error } = props;\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for error\r\n    if (name === '')\r\n      return this.setState({ errors: { name: 'Name is required' } });\r\n\r\n    if (email === '')\r\n      return this.setState({ errors: { email: 'Email is required' } });\r\n\r\n    if (phone === '')\r\n      return this.setState({ errors: { phone: 'Phone is required' } });\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        'https://jsonplaceholder.typicode.com/users',\r\n        newContact\r\n      );\r\n      dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n    } catch (error) {\r\n      newContact.id = uuid();\r\n      dispatch({ type: 'ADD_CONTACT', payload: newContact });\r\n    }\r\n\r\n    // Clear state -> clear form\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // Redirect to Contact List\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Add Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name...\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email...\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter Phone...\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Add ontact\"\r\n                      className=\"btn btn-block btn-light\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (error) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  style={styles.pointer}\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                />\r\n                <i\r\n                  style={styles.pointer}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  className=\"fas fa-times float-right text-danger\"\r\n                />\r\n                <Link to={`contacts/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nconst styles = {\r\n  pointer: {\r\n    cursor: 'pointer'\r\n  }\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n  const { brand } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {brand}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contacts/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  brand: 'Contact Manager'\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <div className=\"display-4\">Contact Manager</div>\r\n      <p>A simple app to manage your contacts</p>\r\n      <p>version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <div className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Not Found\r\n      </div>\r\n      <p>The requested page does not exists!</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const { name, email, phone } = res.data;\r\n\r\n    this.setState({ name, email, phone });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for error\r\n    if (name === '')\r\n      return this.setState({ errors: { name: 'Name is required' } });\r\n\r\n    if (email === '')\r\n      return this.setState({ errors: { email: 'Email is required' } });\r\n\r\n    if (phone === '')\r\n      return this.setState({ errors: { phone: 'Phone is required' } });\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const contact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    try {\r\n      const res = await axios.put(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`,\r\n        contact\r\n      );\r\n\r\n      dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n    } catch (error) {}\r\n\r\n    // Clear state -> clear form\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // Redirect to Contact List\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Edit Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name...\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email...\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter Phone...\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Update ontact\"\r\n                      className=\"btn btn-block btn-light\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Provider\nimport { Provider } from './context';\n\n// Components\nimport AddContact from './components/contacts/AddContact';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport EditContact from './components/contacts/EditContact';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header brand=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contacts/add\" component={AddContact} />\n                <Route\n                  exact\n                  path=\"/contacts/edit/:id\"\n                  component={EditContact}\n                />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}